0x000:                      | main:
0x000: 30f4c800000000000000 | 	irmovq $200, %rsp
0x00a: 30f79800000000000000 | 	irmovq src, %rdi
0x014: 30f6b000000000000000 | 	irmovq dest, %rsi
0x01e: 30f20300000000000000 | 	irmovq $3, %rdx
0x028: 803200000000000000   | 	call copy_block
0x031: 00                   | 	halt
                            | 
0x032:                      | copy_block:
                            | 	# %rdi - src, %rsi - dest, %rdx - len
0x032: 30f00000000000000000 | 	irmovq $0, %rax
0x03c: 30f10800000000000000 | 	irmovq $8, %rcx
0x046: 30f80100000000000000 | 	irmovq $1, %r8
0x050: a03f                 | 	pushq %rbx
0x052: a05f                 | 	pushq %rbp
0x054: 30f30000000000000000 | 	irmovq $0, %rbx # be used to check if content of one register is equal to zero
0x05e: 708300000000000000   | 	jmp check
                            | 
0x067:                      | loop:
0x067: 50570000000000000000 | 	mrmovq (%rdi), %rbp
0x071: 40560000000000000000 | 	rmmovq %rbp, (%rsi)
0x07b: 6350                 | 	xorq %rbp, %rax
0x07d: 6017                 | 	addq %rcx, %rdi
0x07f: 6016                 | 	addq %rcx, %rsi
0x081: 6182                 | 	subq %r8, %rdx
                            | 
0x083:                      | check:
0x083: 6132                 | 	subq %rbx, %rdx
0x085: 746700000000000000   | 	jne loop
                            | 
0x08e:                      | end:
0x08e: b05f                 | 	popq %rbp
0x090: b03f                 | 	popq %rbx
0x092: 90                   | 	ret
                            | 
0x098:                      | .align 8
0x098:                      | src:
0x098: 0a00000000000000     | 	.quad 0x00a
0x0a0: b000000000000000     | 	.quad 0x0b0
0x0a8: 000c000000000000     | 	.quad 0xc00
                            | 
0x0b0:                      | dest:
0x0b0: 1101000000000000     | 	.quad 0x111
0x0b8: 2202000000000000     | 	.quad 0x222
0x0c0: 3303000000000000     | 	.quad 0x333
